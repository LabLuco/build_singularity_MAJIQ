# SEE POST-IT FOR MAJ
BootStrap: debootstrap
OSVersion: focal
MirrorURL: http://us.archive.ubuntu.com/ubuntu/

%runscript
    echo "##########################################################################"
    echo "############ START OF QUALITY - MAPPING  TPM - MAJIQ PIPELINE ############"
    echo "##########################################################################"

    # cutadapt --version
    # which cutadapt 

    cp -r /softwares/snakemake_align_MAJIQ/ ./snakemake_align_MAJIQ
    echo "############ Copy data done ############"


    # cd snakemake_align_MAJIQ/resources/fastq/
    # ls
    # trim_galore --fastqc --cores 4 testT5_REP1_2017_R1.fastq.gz


    cd snakemake_align_MAJIQ/workflow/
    python scripts/write_snakemake_configfile.py 
    snakemake -j 10

%post
    apt-get -y install software-properties-common
    add-apt-repository universe
    apt update
    apt-get -y install unzip curl bzip2 git
    
    # apt-get -y upgrade python3
    apt-get -y install python3-pip
    # python3 --version
    # ls /usr/bin/python*

    update-alternatives --install /usr/bin/python python /usr/bin/python3.8 2

    mkdir /softwares
    cd /softwares
    pwd

    apt-get -y install default-jdk

    apt-get -y install fastqc

    # export PATH="/root/.local/bin/:$PATH"
    python -m pip install --upgrade cutadapt
    which cutadapt

    python -m pip install --upgrade snakemake
    which snakemake

    cd /softwares
    pwd
    mkdir trimgalore
    cd trimgalore
    curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -o trim_galore.tar.gz
    tar xvzf trim_galore.tar.gz
    rm -r trim_galore.tar.gz

    # pwd
    # cd ../
    # mkdir salmon
    # cd salmon
    # curl -fsSL https://github.com/COMBINE-lab/salmon/releases/download/v1.4.0/salmon-1.4.0_linux_x86_64.tar.gz -o salmon-1.4.0_linux_x86_64.tar.gz
    # tar xzvf salmon-1.4.0_linux_x86_64.tar.gz
    # rm -r salmon-1.4.0_linux_x86_64.tar.gz

    apt-get -y install binutils zlib1g-dev
    cd /softwares
    pwd
    mkdir star
    cd star
    curl -fsSL https://github.com/alexdobin/STAR/archive/2.6.1a.tar.gz -o 2.6.1a.tar.gz
    tar xvzf 2.6.1a.tar.gz
    rm -r 2.6.1a.tar.gz
    cd STAR-2.6.1a/source
    make STAR

    apt-get -y install autoconf automake make gcc perl libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libncurses5-dev libhts3 libhts-dev clang
    cd /softwares
    pwd
    mkdir samtools
    cd samtools
    curl -fsSL https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 -o samtools-1.3.1.tar.bz2
    tar -xvjf samtools-1.3.1.tar.bz2
    cd samtools-1.3.1
    make
    make prefix=/usr/local/bin install

    cd /softwares
    pwd
    git clone https://github.com/LabLuco/snakemake_align_MAJIQ.git
    pip3 list
    pip3 install pandas pyyaml

    apt-get -y install cmake
    git clone https://github.com/pezmaster31/bamtools.git
    cd bamtools
    mkdir build
    cd build
    cmake -DCMAKE_INSTALL_PREFIX=../ ..
    make
    make install
    cd ..
    export BAMTOOLS_DIR=`pwd`
    export CPPFLAGS="-I $BAMTOOLS_DIR/include/bamtools/"
    export LDFLAGS="-L $BAMTOOLS_DIR/lib -Wl,-rpath,$BAMTOOLS_DIR/lib"

    cd /softwares
    git clone https://github.com/ncbi/TPMCalculator.git
    cd TPMCalculator
    make

    cd /softwares
    # python -m venv env-majiq
    # . env-majiq/bin/activate
    git clone https://bitbucket.org/biociphers/majiq_academic.git
    cd majiq_academic
    python -m pip install -r requirements.txt
    python setup.py install
    majiq -v
    # python -m pip install --user git+https://bitbucket.org/biociphers/majiq_academic.git#egg=majiq

    # echo '. env-majiq/bin/activate' >> $SINGULARITY_ENVIRONMENT
    # echo '. env-majiq/bin/majiq' >> $SINGULARITY_ENVIRONMENT
    # echo '. env-majiq/bin/voila' >> $SINGULARITY_ENVIRONMENT
    # majiq -v 

    apt-get -y install libxml2 libxml2-dev libcurl4-openssl-dev
    apt-get -y install r-base
    R --version
    R -e ".Library[1]"
    R -e "install.packages('BiocManager', lib=.Library[1]); library('BiocManager'); BiocManager::install(c('DESeq2', 'tximport', 'readr'),  ask =F, lib=.Library[1], quiet=T)"
    R -e "install.packages('pheatmap', ask =F, lib=.Library[1], quiet=T)"
    R -e "BiocManager::install('apeglm', ask =F, lib=.Library[1], quiet=T)"
    R -e "BiocManager::install('S4Vectors', ask =F, lib=.Library[1], quiet=T)"
    R -e "install.packages('devtools', ask =F, lib=.Library[1], quiet=T)"
    R -e "install.packages('BiocGenerics', ask =F, lib=.Library[1], quiet=T)"
    R -e "BiocManager::install('RCurl' , ask =F, lib=.Library[1], quiet=T)"

%environment
    PATH="/softwares/fastqc/FastQC/:$PATH"
    PATH="/softwares/trimgalore/TrimGalore-0.6.6/:$PATH"
    PATH="/softwares/star/STAR-2.6.1a/source/:$PATH"
    PATH="/softwares/samtools/samtools-1.3.1/:$PATH"
    PATH="/softwares/TPMCalculator/bin/:$PATH"
    # PATH="/miniconda/bin/:$PATH"
    PATH="/root/.local/bin/:$PATH"

