# SEE POST-IT FOR MAJ
BootStrap: debootstrap
OSVersion: focal
MirrorURL: http://us.archive.ubuntu.com/ubuntu/

%runscript
    echo "##########################################################################"
    echo "############ START OF QUALITY - MAPPING  TPM - MAJIQ PIPELINE ############"
    echo "##########################################################################"
    python --version
    # python -m pip list
    cd /home/softwares/snakemake_align_MAJIQ/workflow/
    ls ../resources/fastq/
    ls -al ../config/
    python scripts/write_snakemake_configfile.py 
    snakemake -j 4

%post
    apt-get -y install software-properties-common
    add-apt-repository universe
    apt update
    apt-get -y install unzip curl bzip2 git
    
    apt-get -y install python3-pip
    # pip3 install --upgrade pip3

    ls /usr/bin/python*

    update-alternatives --install /usr/bin/python python /usr/bin/python3.8 2

    python --version
    pip3 --version

    cd /home/
    mkdir softwares
    cd softwares
    pwd

    # mkdir python3.8
    # cd python3.8
    # apt-get -y install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev libbz2-dev
    # curl -O https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz
    # tar -xf Python-3.8.2.tar.xz
    # rm -r Python-3.8.2.tar.xz
    # cd Python-3.8.2
    # ./configure --enable-optimizations
    # make -j 4
    # make altinstall

    apt-get -y install default-jdk

    pwd
    mkdir fastqc
    cd fastqc
    curl https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip -o fastqc_v0.11.9.zip
    unzip fastqc_v0.11.9.zip
    rm -r fastqc_v0.11.9.zip

    export PATH="/root/.local/bin/:$PATH"
    pip3 install --user --upgrade cutadapt
    which cutadapt

    pip3 install --user --upgrade snakemake
    which snakemake

    cd ../
    pwd
    mkdir trimgalore
    cd trimgalore
    curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -o trim_galore.tar.gz
    tar xvzf trim_galore.tar.gz
    rm -r trim_galore.tar.gz

    # pwd
    # cd ../
    # mkdir salmon
    # cd salmon
    # curl -fsSL https://github.com/COMBINE-lab/salmon/releases/download/v1.4.0/salmon-1.4.0_linux_x86_64.tar.gz -o salmon-1.4.0_linux_x86_64.tar.gz
    # tar xzvf salmon-1.4.0_linux_x86_64.tar.gz
    # rm -r salmon-1.4.0_linux_x86_64.tar.gz

    apt-get -y install binutils zlib1g-dev
    cd ../
    pwd
    mkdir star
    cd star
    curl -fsSL https://github.com/alexdobin/STAR/archive/2.6.1a.tar.gz -o 2.6.1a.tar.gz
    tar xvzf 2.6.1a.tar.gz
    rm -r 2.6.1a.tar.gz
    cd STAR-2.6.1a/source
    make STAR

    apt-get -y install autoconf automake make gcc perl libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libncurses5-dev libhts3 libhts-dev clang
    cd ../../../
    pwd
    mkdir samtools
    cd samtools
    curl -fsSL https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 -o samtools-1.3.1.tar.bz2
    tar -xvjf samtools-1.3.1.tar.bz2
    cd samtools-1.3.1
    make
    make prefix=/usr/local/bin install

    cd ../../
    pwd
    git clone https://github.com/LabLuco/snakemake_align_MAJIQ.git
    pip3 list
    pip3 install pandas

    apt-get -y install cmake
    git clone https://github.com/pezmaster31/bamtools.git
    cd bamtools
    mkdir build
    cd build
    cmake -DCMAKE_INSTALL_PREFIX=../ ..
    make
    make install
    cd ..
    export BAMTOOLS_DIR=`pwd`
    export CPPFLAGS="-I $BAMTOOLS_DIR/include/bamtools/"
    export LDFLAGS="-L $BAMTOOLS_DIR/lib -Wl,-rpath,$BAMTOOLS_DIR/lib"

    # ls /softwares/bamtools/
    # ls /softwares/bamtools/lib64/
    # ls /softwares/bamtools/lib/
    # ls /softwares/bamtools/build/src/

    cd ../
    git clone https://github.com/ncbi/TPMCalculator.git
    cd TPMCalculator
    make

    # curl -fsSL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o ./miniconda.sh
    # bash ./miniconda.sh -b -p $HOME/miniconda
    # eval "$($HOME/miniconda/bin/conda shell.bash hook)"
    # conda init

    # conda install -y -c bioconda tpmcalculator

    cd ../
    # python -m venv env-majiq
    # . env-majiq/bin/activate
    git clone https://bitbucket.org/biociphers/majiq_academic.git
    cd majiq_academic
    python -m pip install -r requirements.txt
    python setup.py install
    # python -m pip install --user git+https://bitbucket.org/biociphers/majiq_academic.git#egg=majiq

    # echo '. env-majiq/bin/activate' >> $SINGULARITY_ENVIRONMENT
    # echo '. env-majiq/bin/majiq' >> $SINGULARITY_ENVIRONMENT
    # echo '. env-majiq/bin/voila' >> $SINGULARITY_ENVIRONMENT
    # majiq -v

    chmod 777 /root/
    chmod 777 /home/softwares/
    chmod 777 /home/softwares/fastqc/FastQC/fastqc
    chmod 777 /home/softwares/trimgalore/TrimGalore-0.6.6/trim_galore
    chmod -R 777 /home/softwares/snakemake_align_MAJIQ/
    # chmod 777 /miniconda/bin/majiq
    # chmod 777 /softwares/salmon/salmon-latest_linux_x86_64/bin/salmon
    # chmod 777 /.local/bin/cutadapt
    # chmod 777 /.local/bin/snakemake

%environment
    PATH="/home/softwares/fastqc/FastQC/:$PATH"
    PATH="/home/softwares/trimgalore/TrimGalore-0.6.6/:$PATH"
    # PATH="/softwares/salmon/salmon-latest_linux_x86_64/bin/:$PATH"
    PATH="/home/softwares/star/STAR-2.6.1a/source/:$PATH"
    PATH="/home/softwares/samtools/samtools-1.3.1/:$PATH"
    # PATH="/root/env-majiq/bin/:$PATH"
    PATH="/root/.local/lib/python3.8/site-packages/:$PATH"
    PATH="/miniconda/bin/:$PATH"
    PATH="/root/.local/bin/:$PATH"

